services:
  image_to_text:
    build:
      args:
        - USERNAME=${USERNAME}
      context: ./image_to_text
      dockerfile: Dockerfile    
    container_name: image_to_text_${SOL_SUFFIX}
    image: image_to_text_${SOL_SUFFIX}
    restart: always
    working_dir: /srv/image_to_text
    command: ./run.sh
    volumes:
      - ${PWD}/image_to_text:/srv/image_to_text
    env_file:
      - ./image_to_text/.env
    environment:
      - USERNAME=${USERNAME}
      - HOSTNAME=${HOSTNAME}
      - TZ=Australia/Melbourne
    ports:
      - ${IMAGE_TO_TEXT_PORT}:8000
    hostname: ${HOSTNAME}
    tty: true

  text_to_image:
    build:
      args:
        - USERNAME=${USERNAME}
      context: ./text_to_image
      dockerfile: Dockerfile    
    container_name: text_to_image_${SOL_SUFFIX}
    image: text_to_image_${SOL_SUFFIX}
    restart: always
    working_dir: /srv/text_to_image
    command: ./run.sh
    volumes:
      - ${PWD}/text_to_image:/srv/text_to_image
    env_file:
      - ./text_to_image/.env
    environment:
      - USERNAME=${USERNAME}
      - HOSTNAME=${HOSTNAME}
      - TZ=Australia/Melbourne
    ports:
      - ${TEXT_TO_IMAGE_PORT}:8000
    hostname: ${HOSTNAME}
    tty: true

  zoza:
    build:
      args:
        - USERNAME=${USERNAME}
      context: ./zoza
      dockerfile: Dockerfile    
    container_name: zoza_${SOL_SUFFIX}
    image: zoza_${SOL_SUFFIX}
    restart: always
    working_dir: /srv/zoza
    command: ./run.sh
    volumes:
      - ${PWD}/zoza:/srv/zoza
    env_file:
      - ./zoza/.env
    environment:
      - USERNAME=${USERNAME}
      - HOSTNAME=${HOSTNAME}
      - TZ=Australia/Melbourne
    ports:
      - ${ZOZA_PORT}:8000
    hostname: ${HOSTNAME}
    tty: true
